name: Integration Tests

on:
  # Only trigger via workflow_call from ci.yml to avoid duplicate runs
  workflow_call:

jobs:
  integration-tests:
    name: "Integration Tests (Python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orcastrate_ci
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mongodb:
        image: mongo:7
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Just
      uses: extractions/setup-just@v3

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: just install

    - name: Verify Terraform installation
      run: |
        terraform version
        echo "Terraform successfully installed and accessible"

    - name: Set environment variables
      run: |
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD || 'postgres' }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY || 'test-key' }}" >> $GITHUB_ENV
        echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY || 'test-key' }}" >> $GITHUB_ENV

    - name: Run integration tests with coverage
      run: just test-integration-coverage testing

    - name: Upload coverage reports for SonarQube
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: integration-tests-coverage
        path: |
          coverage-integration.xml
          htmlcov-integration/