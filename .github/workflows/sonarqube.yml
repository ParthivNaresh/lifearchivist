name: SonarCloud Analysis

on:
  push:
    paths:
      - 'lifearchivist/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'pytest.ini'
      - 'sonar-project.properties'
      - '.github/workflows/sonarqube.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'lifearchivist/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'pytest.ini'
      - 'sonar-project.properties'
      - '.github/workflows/sonarqube.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  sonarcloud:
    name: "SonarCloud Analysis"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Just
      uses: extractions/setup-just@v3

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: just install

    - name: Run unit tests with coverage
      run: just test-unit-coverage

    - name: Verify coverage file exists
      run: |
        echo "Checking for coverage.xml..."
        if [ -f coverage.xml ]; then
          echo "✓ coverage.xml found"
          echo "File size: $(du -h coverage.xml)"
        else
          echo "✗ coverage.xml not found"
          ls -la
          exit 1
        fi

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io

    - name: SonarQube Quality Gate
      uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
