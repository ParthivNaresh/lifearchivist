name: Unit Tests

on:
  # Only trigger via workflow_call from ci.yml to avoid duplicate runs
  workflow_call:
    outputs:
      coverage-artifact:
        description: "Coverage report artifact name"
        value: ${{ jobs.unit-tests.outputs.coverage-artifact }}

jobs:
  unit-tests:
    name: "Unit Tests (Python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    outputs:
      coverage-artifact: ${{ steps.upload-coverage.outputs.artifact-id }}
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Just
      uses: extractions/setup-just@v3

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: just install

    - name: Run unit tests with coverage
      run: just test-unit-coverage testing

    - name: Upload coverage to Codecov
      id: upload-coverage
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unit-tests
        name: unit-tests-coverage

    - name: Upload coverage reports for SonarQube
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-coverage
        path: |
          coverage.xml
          htmlcov/