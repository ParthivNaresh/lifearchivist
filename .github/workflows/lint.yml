name: Code Linting

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lifearchivist/**'
      - 'desktop/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'desktop/package.json'
      - 'desktop/package-lock.json'
      - '.github/workflows/lint.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'lifearchivist/**'
      - 'desktop/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'desktop/package.json'
      - 'desktop/package-lock.json'
      - '.github/workflows/lint.yml'
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    name: "Code Linting & Formatting"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'desktop/package-lock.json'

    - name: Install Just
      uses: extractions/setup-just@v3

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: just install

    - name: Run linting and code quality checks
      run: just lint